[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "rps_classification"
version = "0.0.1"
description = "CNN for Rock-Paper-Scissors Classification"
authors = [
  { name = "Isabella Cadisco" },
]
license = { file = "LICENSE" }
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License"
]
dependencies = [
    "ipykernel>=7.0.1",
    "loguru",
    "mkdocs",
    "pandas>=2.3.3",
    "pip",
    "pytest",
    "python-dotenv",
    "ruff",
    "scikit-learn",
    "tqdm",
    "typer",
    # === PyTorch (CUDA 12.1) ===
    "torch==2.5.1+cu121; sys_platform == 'win32' or sys_platform == 'linux'",
    "torchvision==0.20.1+cu121; sys_platform == 'win32' or sys_platform == 'linux'",
    "torchaudio==2.5.1+cu121; sys_platform == 'win32' or sys_platform == 'linux'",
    "matplotlib>=3.10.7",
    "seaborn>=0.13.2",
]
requires-python = ">3.11.0"


[tool.ruff]
line-length = 99
src = ["rps_classification"]
include = ["pyproject.toml", "rps_classification/**/*.py"]

[tool.ruff.lint]
extend-select = ["I"]  # Add import sorting

[tool.ruff.lint.isort]
known-first-party = ["rps_classification"]
force-sort-within-sections = true

[tool.setuptools]
packages = ["rps_classification", "rps_classification.modeling"]
include-package-data = true

[tool.uv.sources]
torch = [{ index = "pytorch-cu121", marker = "sys_platform == 'linux' or sys_platform == 'win32'" }]
torchvision = [{ index = "pytorch-cu121", marker = "sys_platform == 'linux' or sys_platform == 'win32'" }]
torchaudio = [{ index = "pytorch-cu121", marker = "sys_platform == 'linux' or sys_platform == 'win32'" }]

[[tool.uv.index]]
name = "pytorch-cu121"
url = "https://download.pytorch.org/whl/cu121"
explicit = true
